package com.bestbuy.testsuite;

import io.restassured.RestAssured;
import io.restassured.response.ValidatableResponse;
import org.junit.BeforeClass;
import org.junit.Test;

import java.util.HashMap;
import java.util.List;

import static io.restassured.RestAssured.given;

public class StoreExtractionTest {

    static ValidatableResponse response;

    @BeforeClass
    public static void inIt() {
        RestAssured.baseURI = "http://localhost";
        RestAssured.port = 3030;

        response =  given()
                .when()
                .get("/stores")
                .then().statusCode(200);

    }

    //1. Extract the limit
    @Test
    public void extractLimit() {
        int limit = response.extract().path("limit");
        System.out.println("The value of limit is : " + limit);
    }
    //2. Extract the total
    @Test
    public void extractTotal() {
        int total = response.extract().path("total");
        System.out.println("The value of total is : " + total);
    }
    //3. Extract the name of 5th store// "Maplewood"
    @Test
    public void nameOf5thStore(){
        String storeName = response.extract().path("data[4].name");
        System.out.println("The name of 5th Store is :"  + storeName);
    }
    //4. Extract the names of all the store
    @Test
    public void theNameOfAllStore(){
        List<String> allStoreName = response.extract().path("data.name");
        System.out.println("The all store name are : " + allStoreName);
    }
    //5. Extract the storeId of all the store
    @Test
    public void theStoreIdOfAllStore(){
        List<Integer> allStoreId =response.extract().path("data.id");
        System.out.println("The storeId of all the store are :" + allStoreId);
    }
    //6. Print the size of the data list
    @Test
    public void theSizeOfAllStore(){
        List<Integer> allStoreId =response.extract().path("data.id");
        System.out.println("The size of all the store are :" + allStoreId.size());
    }
    //7. Get all the value of the store where store name = St Cloud
    @Test
    public void theValueOfTheStore(){
        List<HashMap<String, ?>> value = response.extract().path("data.findAll{it.name == 'St Cloud'}");
        System.out.println("The value of the store where store name = St Cloud is : " +value);
    }
    //8. Get the address of the store where store name = Rochester
    @Test
            public void theAddressOfTheStore() {
        List<HashMap<String, ?>> address = response.extract().path("data.findAll{it.name == 'Rochester'}.address");
        System.out.println("the address of the store where store name = Rochester is :" +address);
    }
    //9. Get all the services of 8th store
    @Test
    public void getAllServicesOf8thStore(){
     List<HashMap<String, ?>> services = response.extract().path("data[7].services");
        System.out.println(services);
    }

    //10. Get storeservices of the store where service name = Windows Store
    @Test
    public void getStoreServicesOfTheStore(){
     List<HashMap<String, ?>>  storeServices = response.extract().path("data[0].services.findAll{it.name == 'Windows Store'}.storeservices");
        System.out.println(storeServices);
    }
    //11. Get all the storeId of all the store
    @Test
    public void getAllTheStoreIdOfAllTheStore(){
        List<Integer> allSroreId = response.extract().path("data.services.storeservices.storeId");
        System.out.println("All the storeId of all the store :"  + allSroreId);
    }
    //12. Get id of all the store
    public void getIdOfAllTheStore(){
    List<Integer> allStoreId =response.extract().path("data.id");
        System.out.println("The storeId of all the store are :" + allStoreId);
}
    //13. Find the store names Where state = ND
    @Test
    public void findTheStoreName(){
       List<String> name = response.extract().path("data.findAll{it.state == 'ND'}.name");
        System.out.println(name);
    }
    //14. Find the Total number of services for the store where store name = Rochester
    @Test
    public void findTheTotalNumberOfServices(){
        List<HashMap<String,?>> totalNumber = response.extract().path("data.findAll{it.name == 'Rochester'}.services[0]");
        System.out.println(totalNumber.size());
    }
    //15. Find the createdAt for all services whose name = “Windows Store”
@Test
    public void findTheCreatedAt(){
        List<?> createdAt = response.extract().path("data[0].services.findAll{it.name == 'Windows Store'}.createdAt");
    System.out.println(createdAt);
}
    //16. Find the name of all services Where store name = “Fargo”
    @Test
            public void findTheNameOfAllServices() {

        List<String> fargoServicesName = response.extract().path("data.findAll{it.name == 'Fargo'}.services.name");
        System.out.println(fargoServicesName);
    }
    //17. Find the zip of all the store
    @Test
    public void findTheZipOfAllTheStore(){
        List<Integer> zip = response.extract().path("data.zip");
        System.out.println(zip);
    }
    //18. Find the zip of store name = Roseville
    @Test
    public void findTheZipOfStoreNameRoseville(){
       List<String> zip = response.extract().path("data.findAll{it.name == 'Roseville'}.zip");
        System.out.println(zip);
    }
    //19. Find the storeservices details of the service name = Magnolia Home Theater
    @Test
    public void findTheStoreServices(){
        List<?> storeServices = response.extract().path("data.find{it.services}.services.findAll{it.name='Magnolia Home Theater'}.storeservices");
        System.out.println(storeServices);
    }

    //20. Find the lat of all the stores
    @Test
    public void findTheLatOfAllTheStore(){
        List<Double> lat = response.extract().path("data.lat");
        System.out.println(lat);
    }
}

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































